#coding:utf-8

from django.shortcuts import render_to_response
from django.template import RequestContext
from userManager.forms import LoginUserForm,AddUserForm,EditUserForm
from userManager.models import UserProfile
from smartcloud.common.CommonPaginator import SelfPaginator
from django.contrib import auth
from django.contrib.auth.models import User
from django import forms
from django.http import HttpResponse,HttpResponseRedirect
from django.core.urlresolvers import reverse

def login(request):
	form=None
	if request.method=="GET":
		form=LoginUserForm()
		return render_to_response('userManager/login.html',{"form":form},RequestContext(request))
	else:
		form = LoginUserForm(request.POST)
		if form.is_valid():
			data=form.cleaned_data
			print data
			login_user=auth.authenticate(username=data['username'],password=data['password'])
			if login_user and login_user.is_superuser:
				auth.login(request,login_user)
				return render_to_response('index.html',{"form":form},RequestContext(request))
			else:
				print login_user
				return render_to_response('userManager/login.html',{"form":form},RequestContext(request))
		else:
			return render_to_response('userManager/login.html',{"form":form},RequestContext(request))

def logoutUser(request):
	    auth.logout(request)
	    return HttpResponseRedirect(request.META.get('HTTP_REFERER', '/'))

def listUser(request):
	users = UserProfile.objects.all()
        #分页功能
	lst = SelfPaginator(request,users, 2)
        kwvars = {
                  'lPage':lst,
		  'request':request,
		 }
        return render_to_response('userManager/user.list.html',kwvars,RequestContext(request))

def editUser(request,ID):
	if request.method=='POST':
		return HttpResponseRedirect(reverse('listuserurl'))
	else:
		user = User.objects.filter(id=ID)
		userprofile=UserProfile.objects.filter(user_id=ID)
		form = EditUserForm({"username":userprofile.name,"password":user.password})
		return render_to_response('userManager/user.edit.html',{"ID":ID,"form":form,"email":"123"},RequestContext(request))

def deleteUser(request,ID):
	User.objects.filter(id=ID).delete()
	UserProfile.objects.filter(user_id=ID).delete()
	
	return HttpResponseRedirect(reverse('listuserurl'))

def addUser(request):
         if request.method=='POST':
		 form = AddUserForm(request.POST)
		 if form.is_valid():
			 data=form.cleaned_data
			 email=data['email']
			 name=data['username']
			 password=data['password']
			 phone=data['phone']
			 company=data['company']
			 role=data['role']
			 is_active=data['is_active']
			 user = User.objects.create(email=email,username=email,password=password)
			 UserProfile.objects.create(user_id=user.id,name=name,phone=phone,company_id=company,role_id=role)
			 return HttpResponseRedirect(reverse('listuserurl'))
 	 else:
		 form = AddUserForm()
	 kwvars = {
		      'form':form,
		      'request':request,
		      }
     	 return render_to_response('userManager/user.add.html',kwvars,RequestContext(request))
